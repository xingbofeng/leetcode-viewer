{"c++":"class Solution {\npublic:\n  string longestPalindrome(string s) {\n    string longest = \"\";\n    for (int k = 0; k < s.size(); ++k) {\n      int i = k, j = k;\n      while(i >= 0 && j <= s.size() - 1) {\n        if (s[i] != s[j]) {\n          break;\n        } else {\n          i--;\n          j++;\n        }\n      }\n      // 还原一位\n      i++;\n      j--;\n      if (j - i + 1 > longest.size()) {\n        longest = s.substr(i, j - i + 1); \n      }\n      // 对于偶回文串的处理\n      i = k, j = k;\n      if (s[k] == s[k + 1]) {\n        j = k + 1;\n      }\n      while(i >= 0 && j <= s.size() - 1) {\n        if (s[i] != s[j]) {\n          break;\n        } else {\n          i--;\n          j++;\n        }\n      }\n      // 还原一位\n      i++;\n      j--;\n      if (j - i + 1 > longest.size()) {\n        longest = s.substr(i, j - i + 1); \n      }\n    }\n    return longest;\n  }\n};"}