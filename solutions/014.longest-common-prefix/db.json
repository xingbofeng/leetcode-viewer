{"c++":"class Solution {\npublic:\n    string longestCommonPrefix(vector<string> &strs) {\n        if (strs.empty()){\n          return \"\";\n        }\n        string result = \"\";\n        for (int i = 0; i < strs[0].size(); ++i) { // 对第一个字符串每个位置循环\n          char ch = strs[0][i];\n          for (int j = 0; j < strs.size(); ++j) { // 判断第j个字符串的第i个位置是否与第一个字符串相等\n            if (strs[j][i] !=ch || i == strs[j].size()) {\n              // 如果有不相等的或者已经循环到某个字符串的末尾，直接返回\n              return result;\n            }\n          }\n          // 否则把现今字符入栈\n          result.push_back(ch);\n        }\n        return result;\n    }\n};"}