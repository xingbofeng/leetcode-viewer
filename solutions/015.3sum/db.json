{"c++":"class Solution {\npublic:\n  vector<vector<int>> threeSum(vector<int>& nums) {\n    set<vector<int>> res;\n    sort(nums.begin(), nums.end());\n    for (int k = 0; k < nums.size(); ++k) {\n      if (nums[k] > 0) {\n        break;\n      }\n      int target = -nums[k];\n      int i = k + 1, j = nums.size() - 1;\n      while(i < j) {\n        if (nums[i] + nums[j] == target) {\n          res.insert({nums[k], nums[i], nums[j]});\n          while(i < j && nums[i] == nums[i + 1]) {\n            ++i;\n          }\n          while(i < j && nums[j] == nums[j - 1]) {\n            --j;\n          }\n          ++i;\n          --j;\n        } else if (nums[i] + nums[j] < target) {\n          ++i;\n        } else {\n          --j;\n        }\n      }\n    }\n    return vector<vector<int>>(res.begin(), res.end());\n  }\n};"}